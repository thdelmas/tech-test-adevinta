// Code generated by MockGen. DO NOT EDIT.
// Source: /home/mia/tech-test-adevinta/src/services/fizzbuzz.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/thdelmas/tech-test-adevinta/models"
)

// MockFizzBuzzServiceInterface is a mock of FizzBuzzServiceInterface interface.
type MockFizzBuzzServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockFizzBuzzServiceInterfaceMockRecorder
}

// MockFizzBuzzServiceInterfaceMockRecorder is the mock recorder for MockFizzBuzzServiceInterface.
type MockFizzBuzzServiceInterfaceMockRecorder struct {
	mock *MockFizzBuzzServiceInterface
}

// NewMockFizzBuzzServiceInterface creates a new mock instance.
func NewMockFizzBuzzServiceInterface(ctrl *gomock.Controller) *MockFizzBuzzServiceInterface {
	mock := &MockFizzBuzzServiceInterface{ctrl: ctrl}
	mock.recorder = &MockFizzBuzzServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFizzBuzzServiceInterface) EXPECT() *MockFizzBuzzServiceInterfaceMockRecorder {
	return m.recorder
}

// GenerateFizzBuzz mocks base method.
func (m *MockFizzBuzzServiceInterface) GenerateFizzBuzz(req models.FizzBuzzRequest) []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateFizzBuzz", req)
	ret0, _ := ret[0].([]string)
	return ret0
}

// GenerateFizzBuzz indicates an expected call of GenerateFizzBuzz.
func (mr *MockFizzBuzzServiceInterfaceMockRecorder) GenerateFizzBuzz(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateFizzBuzz", reflect.TypeOf((*MockFizzBuzzServiceInterface)(nil).GenerateFizzBuzz), req)
}
